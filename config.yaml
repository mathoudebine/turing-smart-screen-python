---
config:
  # Configuration values to set up basic communication
  # Set your COM port e.g. COM3 for Windows, /dev/ttyACM0 for Linux...
  # Use AUTO for COM port auto-discovery (may not work on every setup)
  # COM_PORT: "/dev/ttyACM0"
  # COM_PORT: "COM3"
  COM_PORT: "AUTO"

  # Theme to use (located in res/themes)
  # Use the name of the folder as value
  # Choose a theme made for your screen size (see DISPLAY_SIZE inside theme.yaml)
  THEME: 3.5inchTheme2

  # Hardware sensors reading
  # Choose the appropriate method for reading your hardware sensors:
  # - PYTHON         use Python libraries (psutils, GPUtil...) to read hardware sensors (supports all OS but not all HW)
  # - LHM            use LibreHardwareMonitor library to read hardware sensors (Windows only - NEEDS ADMIN RIGHTS)
  # - STUB / STATIC  use random/static data instead of real hardware sensors
  # - AUTO           use the best method based on your OS: Windows OS will use LHM, other OS will use Python libraries
  HW_SENSORS: AUTO

  # Network interfaces
  # Linux/MacOS interfaces are named "eth0", "wlan0", "wlp1s0", "enp2s0"...
  # For Windows use the interfaces pretty name: "Ethernet 2", "Wi-Fi", ...
  # Leave the fields empty if the card does not exist on your setup
  ETH: "" # Ethernet Card
  WLO: "" # Wi-Fi Card

  # CPU fan
  # For Linux/MacOS platforms, the CPU fan is amongst all fan sensors gathered from the motherboard chipset
  # If value is AUTO the system monitor will try to auto-select the CPU fan
  # If auto-detection fails, it might be necessary to manually indicate which fan is the CPU fan
  # Value must be 'controller/fan' e.g. 'nct6798/fan2'. Use configuration wizard for help in selection
  CPU_FAN: AUTO

  # Address used for ping sensor. Can be internal/external IP (e.g. 8.8.8.8 or 192.168.0.1) or hostname (google.com)
  PING: 8.8.8.8

  # Weather data with OpenWeatherMap API. Only useful if you want to use a theme that displays it

  # OpenWeatherMap API KEY. Can be obtained by creating a free account on https://home.openweathermap.org/users/sign_up.
  # You need to subscribe to the 3.0 OneCallAPI that has 1000 free daily calls
  WEATHER_API_KEY: ""
  # Location from which to display the weather. Use for example https://www.latlong.net/ to get latitude/longitude
  WEATHER_LATITUDE: 45.75
  WEATHER_LONGITUDE: 4.85
  # Units used to display temperatures (metric - °C, imperial - °F, standard - °K)
  WEATHER_UNITS: metric
  # Language is used by the API. Find more here https://openweathermap.org/api/one-call-3#multi
  WEATHER_LANGUAGE: en

display:
  # Display revision:
  # - A    for Turing 3.5" and UsbPCMonitor 3.5"/5"
  # - B    for Xuanfang 3.5" (inc. flagship)
  # - C    for Turing 2.1"/5"/8.8"
  # - D    for Kipye Qiye Smart Display 3.5"
  # - SIMU for simulated display (image written in screencap.png). Width & height will be detected from the theme
  # To identify your smart screen: https://github.com/mathoudebine/turing-smart-screen-python/wiki/Hardware-revisions
  REVISION: A

  # Display Brightness
  # Set this as the desired %, 0 being completely dark and 100 being max brightness
  # Warning: revision A display can get hot at high brightness!
  BRIGHTNESS: 20

  # Display reverse: true/false
  # Set to true to reverse display orientation (landscape <-> reverse landscape, portrait <-> reverse portrait)
  # Note: Display basic orientation (portrait or landscape) is defined by the theme you have selected
  DISPLAY_REVERSE: false
