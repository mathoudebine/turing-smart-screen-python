# This theme is an example of how to implement and display custom data in System Monitor
# It is possible to add external sensor sources that come from custom Python code or external modules, and integrate them in an existing theme
# This file is the theme part to display the custom data, custom data gathering must first be implemented in Python into the sensors_custom.py file
# Names of the custom sensor classes listed here must be an exact match to class names in sensors_custom.py
---
display:
  DISPLAY_ORIENTATION: landscape
  DISPLAY_RGB_LED: 61, 184, 225

static_images:
  BACKGROUND:
    PATH: background.png
    X: 0
    Y: 0
    WIDTH: 480
    HEIGHT: 320

STATS:
  DATE:
    INTERVAL: 1
    HOUR:
      TEXT:
        SHOW: True
        X: 20
        Y: 30
        FONT: roboto-mono/RobotoMono-Bold.ttf
        FONT_SIZE: 20
        FONT_COLOR: 200, 200, 200
        # BACKGROUND_COLOR: 50, 0, 0
        BACKGROUND_IMAGE: background.png

  # All custom sensor classes are listed under CUSTOM
  CUSTOM:

    # For now the refresh interval (in seconds) is the same for all custom data classes
    INTERVAL: 3



    # The name of the class must be an exact match to the class name in sensors_custom.py
    ExampleCustomNumericData:

      # There are 4 ways of displaying a custom sensor containing numeric values: as text, as bar graph (progress bar), as radial progress bar, as line graph
      TEXT:
        SHOW: True
        X: 50
        Y: 80
        FONT: roboto-mono/RobotoMono-Bold.ttf
        FONT_SIZE: 40
        FONT_COLOR: 200, 200, 200
        # BACKGROUND_COLOR: 50, 0, 0
        BACKGROUND_IMAGE: background.png

      GRAPH:
        SHOW: True
        X: 50
        Y: 150
        WIDTH: 180
        HEIGHT: 30
        MIN_VALUE: 0
        MAX_VALUE: 100
        BAR_COLOR: 255, 135, 0
        BAR_OUTLINE: True
        # BACKGROUND_COLOR: 0, 0, 0
        BACKGROUND_IMAGE: background.png

      RADIAL:
        SHOW: True
        X: 350
        Y: 130
        RADIUS: 68
        WIDTH: 18
        MIN_VALUE: 0
        MAX_VALUE: 100
        ANGLE_START: 110
        ANGLE_END: 70
        ANGLE_STEPS: 1
        ANGLE_SEP: 25
        CLOCKWISE: True
        BAR_COLOR: 61, 184, 225
        SHOW_TEXT: True
        SHOW_UNIT: True
        FONT: roboto-mono/RobotoMono-Bold.ttf
        FONT_SIZE: 25
        FONT_COLOR: 255, 135, 0
        # BACKGROUND_COLOR: 0, 0, 0
        BACKGROUND_IMAGE: background.png

      LINE_GRAPH:
        SHOW: True
        X: 300
        Y: 220
        WIDTH: 133
        HEIGHT: 70
        MIN_VALUE: 0
        MAX_VALUE: 100
        AUTOSCALE: False
        LINE_COLOR: 61, 184, 225
        AXIS: True
        AXIS_COLOR: 255, 135, 0
        BACKGROUND_IMAGE: background.png



    # The name of the class must be an exact match to the class name in sensors_custom.py
    ExampleCustomTextOnlyData:

      # There are only 1 way of displaying a custom sensor containing text-only values: as text
      TEXT:
        SHOW: True
        X: 34
        Y: 250
        FONT: roboto-mono/RobotoMono-Bold.ttf
        FONT_SIZE: 28
        FONT_COLOR: 61, 184, 225
        # BACKGROUND_COLOR: 50, 0, 0
        BACKGROUND_IMAGE: background.png
